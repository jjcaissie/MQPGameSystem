import gameSystem
import time
import threading
import personalityRunner

__stateGame = 0
__stateChatbot = 1

gameData = (" ","")             #Data being sent to personality bot. formatted like (question, answer)
chatbotData = ""                #Data being sent to game system. Should be the robot's response given gameData
    
def main():
    global gameData, chatbotData
    currentState = __stateChatbot
    gameThread = threading.Thread(target=gameSystem.HostServer)
    gameThread.start()

    while True:
        while currentState == __stateGame:                      #If in one of the game states
            gameSystem.setChatbotResponse(chatbotData)
            gameSystem.isServerPaused = False                       #Unpause game server 
            if gameData != gameSystem.getData():                        #Flag for when data is altered
                gameSystem.isServerPaused = True                        #Pause game server
                gameData = gameSystem.getData()                         #Read data from game
                currentState = __stateChatbot                           #Give control to chatbot

        while currentState == __stateChatbot:                   #If in the chatbot state
            if gameSystem.gameState == gameSystem.usrGuessingState:               #If game state is in cpu guess state
                print("simulating a response for when the usr is guessing the character. Recieved: " + gameData[0] + ":" + gameData[1])
                chatbotData = personalityRunner.generateResponse()
                time.sleep(2)
                

                print("chatbot state end")
            elif gameSystem.gameState == gameSystem.cpuGuessingState:             #If game state is in usr guess state
                print("simulating a response for when the cpu is guessing the character. Recieved: " + gameData[0] + ":" + gameData[1])
                chatbotData = personalityRunner.generateResponse()
                time.sleep(2)

                print("chatbot state end")

            currentState = __stateGame                                  #Give control to game system
        
main()